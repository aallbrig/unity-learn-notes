Mind Map generated by NB MindMap plugin
> __version__=`1.1`,showJumps=`true`
---

# C\# Scripting in Unity: Beyond the Basics

## Tips

### Consistency trumps style

#### conventions

### Code is written for people to read

### Think about logical groupings as paragraphs in an essay

### Make names descriptive and consistent

### Use easily readable names

### Avoid abbreviations

### Do not use underscores between words

### Namespaces are typically grouped by feature \(see Unity namespaces for examples\)

## Common Naming Conventions
> leftSide=`true`


### Pascal Case

#### The first letter of every word is capitalized

#### One word identifiers are always capitalized
> leftSide=`true`


### Camel Case

#### The first letter of the first word is lowercase

#### All subsequent words have the first letter capitalized
> leftSide=`true`


## Understanding Types
> leftSide=`true`


### Components of a Program

#### Data

##### Information to be processed & stored

#### Logic

##### Operations to be performed on data

### What can a type tell us?

#### The kind of data stored

#### Amount of memory required
> leftSide=`true`


#### The location in memory
> leftSide=`true`


### Types of types

#### Value types

##### Memory is allocated directly and inline on the stack

#### Reference types
> leftSide=`true`


##### Memory is allocated randomly on the managed heap

##### e\.g\. classes, delegates and interfaces

### Memory allocation by type

#### Stack

##### Value types

##### Pointers to reference types

#### Heap
> leftSide=`true`


##### Reference types

### Stack vs heap

#### Stack

##### Allocated when compiled

##### Data is stored sequentially

##### Variable size must be known

##### Not subject to garbage collection

##### Fast

#### Heap
> leftSide=`true`


##### Allocated during runtime

##### Data is stored randomly

##### Variable size can be unknown

##### May be garbage collected

##### Slow
